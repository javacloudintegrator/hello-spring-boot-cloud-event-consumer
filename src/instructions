
1. Install all Knative components from tutorials 1 and 2.
2. git clone project
3. docker build -t (your_dockerhub_username))/hello-spring-boot-cloud-event-consumer .
4. docker push (your_dockerhub_username))/hello-spring-boot-cloud-event-consumer
5. kn service -n example-event-consumer create hello-spring-boot-cloud-event-consumer --image=docker.io/(your_dockerhub_username))/hello-spring-boot-cloud-event-consumer -f service.yaml
    - test with/without file. Need to understand why Knative sometimes keeps pod running and sometimes not.
6. kubectl logs - watch pod logs
===== TEST by getting URL via kn service describe. Notice response. =====

7. Create trigger
kubectl -n example-event-consumer apply -f - << EOF
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: hello-spring-boot-cloud-event-consumer
spec:
  broker: default
  filter:
    attributes:
      type: com.jci.spring
  subscriber:
    ref:
     apiVersion: v1
     kind: Service
     name: hello-spring-boot-cloud-event-consumer
EOF

kubectl -n example-event-consumer apply -f - << EOF
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: hello-spring-boot-cloud-event-consumer
spec:
  broker: default
  subscriber:
    ref:
     apiVersion: v1
     kind: Service
     name: hello-spring-boot-cloud-event-consumer
EOF

8. Create curl pod and attach. Send event to default broker. Notice logs.




kn service create hello-spring-boot-cloud-event-consumer --image=docker.io/javacloudintegrator/hello-spring-boot-cloud-event-consumer


kubectl create -f - <<EOF
apiVersion: eventing.knative.dev/v1
kind: broker
metadata:
 name: default
 namespace: example-event-consumer
EOF



# Knative service test via curl container
kubectl -n example-event-consumer apply -f - << EOF
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: curl
  name: curl
spec:
  containers:
    # This could be any image that we can SSH into and has curl.
  - image: radial/busyboxplus:curl
    imagePullPolicy: IfNotPresent
    name: curl
    resources: {}
    stdin: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    tty: true
EOF


curl -v -d '{"value": "Event producer says hello via Knative Eventing!"}' \
    -H'Content-type: application/json' \
    -H'ce-id: 1' \
    -H'ce-source: hello-spring-boot-cloud-event-producer' \
    -H'ce-type: com.jci.cloud.event' \
    -H'ce-specversion: 1.0' \
    http://broker-ingress.knative-eventing.svc.cluster.local/example-event-consumer/default

curl -v -d '{"value": "Event producer says hello!"}' \
    -H'Content-type: application/json' \
    -H'ce-id: 1' \
    -H'ce-source: hello-spring-boot-cloud-event-producer' \
    -H'ce-type: com.jci.cloud.event' \
    -H'ce-specversion: 1.0' \
    http://hello-spring-boot-cloud-event-consumer.example-event-consumer.127.0.0.1.xip.io/event




curl -v -d '{"value": "Event producer says hello!"}' \
    -H'Content-type: application/json' \
    -H'ce-id: 1' \
    -H'ce-source: hello-spring-boot-cloud-event-producer' \
    -H'ce-type: com.jci.cloud.event' \
    -H'ce-specversion: 1.0' \
    http://hello-spring-boot-cloud-event-consumer.example-event-consumer.127.0.0.1.xip.io/event





Docker test:

curl -v -d '{"value": "Event producer says hello!"}' \
    -H'Content-type: application/json' \
    -H'ce-id: 1' \
    -H'ce-source: hello-spring-boot-cloud-event-producer' \
    -H'ce-type: com.jci.cloud.event' \
    -H'ce-specversion: 1.0' \
    http://localhost:8080/event

curl -v -d '{"value": "Event producer says hello!"}' \
    -H'Content-type: application/json' \
    -H'ce-id: 1' \
    -H'ce-source: hello-spring-boot-cloud-event-producer' \
    -H'ce-type: com.jci.cloud.event' \
    -H'ce-specversion: 1.0' \
    http://localhost:8080/mono

curl -v -d '{"value": "Event producer says hello!"}' \
    -H'Content-type: application/json' \
    -H'ce-id: 1' \
    -H'ce-source: hello-spring-boot-cloud-event-producer' \
    -H'ce-type: com.jci.cloud.event' \
    -H'ce-specversion: 1.0' \
    http://hello-spring-boot-cloud-event-consumer.example-event-consumer.127.0.0.1.xip.io/event